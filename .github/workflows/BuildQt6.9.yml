name: Build Qt 6.9.0

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [gcc, clang, msvc]
        build_type: [Debug, Release, DebugAndRelease]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ninja
        uses: llvm/actions/setup-ninja@main

      - name: Set up Compiler
        if: ${{ matrix.compiler != 'msvc' }}
        uses: llvm/actions/setup-${{ matrix.compiler }}@main

      - name: Set up MSVC
        if: ${{ matrix.compiler == 'msvc' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies (Linux only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 ninja-build

      - name: Install dependencies (macOS only)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install ninja

      - name: Download Qt 6.9.0 source
        run: |
          curl -LO https://download.qt.io/official_releases/qt/6.9/6.9.0/single/qt-everywhere-src-6.9.0.tar.xz
          tar -xf qt-everywhere-src-6.9.0.tar.xz
        shell: bash

      - name: Configure and Build Qt
        run: |
          cd qt-everywhere-src-6.9.0
          mkdir build
          cd build

          BUILD_TYPES=""
          if [[ "${{ matrix.build_type }}" == "DebugAndRelease" ]]; then
            BUILD_TYPES="-debug-and-release"
          elif [[ "${{ matrix.build_type }}" == "Debug" ]]; then
            BUILD_TYPES="-debug"
          else
            BUILD_TYPES="-release"
          fi

          ../configure -prefix ${{ github.workspace }}/qt-install -opensource -confirm-license -platform ninja $BUILD_TYPES
          cmake --build . --parallel
        shell: bash

      - name: Package Qt build
        run: |
          cd qt-everywhere-src-6.9.0
          zip -r qt6-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}.zip build
          echo "ARCHIVE_NAME=qt6-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}.zip" >> $GITHUB_ENV
        shell: bash

      - name: Upload Qt build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qt6-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: qt-everywhere-src-6.9.0/${{ env.ARCHIVE_NAME }}
