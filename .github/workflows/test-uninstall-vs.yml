name: Install VS2019 on windows-latest

on: [push]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ==================== 卸载 VS2022 ====================
      - name: Uninstall Visual Studio 2022
        shell: powershell
        run: |
          # 查找已安装的 VS2022 实例
          $vsWherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          if (-Not (Test-Path $vsWherePath)) {
            Write-Error "vswhere.exe not found. VS Installer may be missing."
            exit 1
          }

          # 获取 VS2022 安装路径
          $vs2022Path = & $vsWherePath -version "[17.0,18.0)" -property installationPath
          if (-not $vs2022Path) {
            Write-Host "VS2022 not found, skipping uninstall..."
          } else {
            Write-Host "Found VS2022 at: $vs2022Path"
            $installerPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"

            # 启动卸载（静默模式，不重启）
            Start-Process -Wait -FilePath $installerPath -ArgumentList "uninstall --installPath `"$vs2022Path`" --quiet --norestart --force"

            Write-Host "✅ VS2022 uninstalled."
          }

      # ==================== 下载并安装 VS2019 ====================
      - name: Download VS2019 Bootstrapper
        run: |
          curl -L -o vs_community.exe https://aka.ms/vs/16/release/vs_community.exe
          # 或者使用企业版：https://aka.ms/vs/16/release/vs_enterprise.exe

      - name: Create VS2019 Installation Config
        run: |
          mkdir .\vsconfig\
          echo '{"version":"1.0","components":["Microsoft.VisualStudio.Workload.ManagedDesktop","Microsoft.VisualStudio.Workload.NativeDesktop","Microsoft.VisualStudio.Workload.NetWeb","Microsoft.VisualStudio.Workload.Universal","Microsoft.VisualStudio.Workload.VisualStudioExtension","Microsoft.VisualStudio.Component.TestTools.Core","Microsoft.VisualStudio.Component.VC.Tools.x86.x64","Microsoft.NetCore.Component.SDK","Microsoft.Net.Component.4.8.SDK","Microsoft.VisualStudio.Component.NuGet","Microsoft.VisualStudio.Component.Roslyn.Compiler","Microsoft.VisualStudio.Component.Roslyn.LanguageServices","Microsoft.VisualStudio.Component.TextTemplating","Microsoft.VisualStudio.Component.VC.CMake.Project","Microsoft.VisualStudio.Component.VC.ATL","Microsoft.VisualStudio.Component.VC.TestAdapterForBoostTest","Microsoft.VisualStudio.Component.VC.TestAdapterForGoogleTest"]}' > .\vsconfig\vs2019.vsconfig

      - name: Install Visual Studio 2019
        run: |
          .\vs_community.exe --quiet --wait --norestart --nocache --config .\vsconfig\vs2019.vsconfig
        shell: powershell

      - name: Verify Installation
        run: |
          $vsWherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          & $vsWherePath -version "[16.0,17.0)" -products * -requires Microsoft.Component.MSBuild -property installationPath

      # ==================== 设置环境变量 / 启动 Developer Prompt ====================
      - name: Setup VS2019 Developer Environment
        run: |
          # 获取 VS2019 路径
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -version "[16.0,17.0)" -property installationPath
          if ($vsPath) {
            # 启动 Developer Command Prompt 环境
            $batchPath = Join-Path $vsPath "Common7\Tools\VsDevCmd.bat"
            cmd /c "`"$batchPath`" && set" > envvars.txt
            Get-Content envvars.txt | ForEach-Object {
              if ($_ -match "^(.*?)=(.*)$") {
                [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2], [System.EnvironmentVariableTarget]::Process)
              }
            }
            Write-Host "✅ VS2019 environment loaded."
          } else {
            Write-Error "VS2019 installation not found!"
            exit 1
          }

      # ==================== 测试编译 ====================
      - name: Test MSBuild
        run: msbuild /version